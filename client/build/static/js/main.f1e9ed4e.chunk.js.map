{"version":3,"sources":["utils/setAuthToken.js","actions/authActions.js","actions/types.js","reducers/authReducer.js","reducers/errorReducer.js","reducers/index.js","store.js","components/Navbar/index.js","components/Landing/index.js","components/auth/Register.js","components/auth/Login.js","components/private-route/PrivateRoute.js","components/dashboard/Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","type","payload","logoutUser","dispatch","localStorage","removeItem","isEmpty","require","initialState","isAuthenticated","user","loading","combineReducers","auth","state","arguments","length","undefined","action","Object","objectSpread","errors","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","window","__REDUX_DEVTOOLS_EXTENSION__","Navbar","react_default","a","createElement","className","react_router_dom","to","style","fontFamily","Component","Landing","width","borderRadius","letterSpacing","Register","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChange","e","setState","defineProperty","target","id","value","onSubmit","preventDefault","newUser","name","email","password","password2","console","log","props","registerUser","history","push","nextProps","paddingLeft","noValidate","error","classnames","invalid","htmlFor","marginTop","connect","userData","post","then","res","catch","err","response","data","withRouter","Login","loginUser","emailnotfound","passwordincorrect","setItem","jwt_decode","_ref","component","rest","objectWithoutProperties","react_router","assign","render","Dashboard","onLogoutClick","height","split","onClick","jwtToken","currentTime","Date","now","exp","location","href","App","es","components_Navbar","exact","path","private_route_PrivateRoute","Boolean","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f1e9ed4e.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst setAuthToken = token => {\r\n  if (token) {\r\n    // Apply authorization token to every request if logged in\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    // Delete auth header\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\nexport default setAuthToken;","import axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport {\r\n  GET_ERRORS,\r\n  SET_CURRENT_USER,\r\n  USER_LOADING\r\n} from \"./types\";\r\n// Register User\r\nexport const registerUser = (userData, history) => dispatch => {\r\n  axios\r\n    .post(\"/api/users/register\", userData)\r\n    .then(res => history.push(\"/login\")) // re-direct to login on successful register\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n// Login - get user token\r\nexport const loginUser = userData => dispatch => {\r\n  axios\r\n    .post(\"/api/users/login\", userData)\r\n    .then(res => {\r\n      // Save to localStorage\r\n// Set token to localStorage\r\n      const { token } = res.data;\r\n      localStorage.setItem(\"jwtToken\", token);\r\n      // Set token to Auth header\r\n      setAuthToken(token);\r\n      // Decode token to get user data\r\n      const decoded = jwt_decode(token);\r\n      // Set current user\r\n      dispatch(setCurrentUser(decoded));\r\n    })\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n// Set logged in user\r\nexport const setCurrentUser = decoded => {\r\n  return {\r\n    type: SET_CURRENT_USER,\r\n    payload: decoded\r\n  };\r\n};\r\n// User loading\r\nexport const setUserLoading = () => {\r\n  return {\r\n    type: USER_LOADING\r\n  };\r\n};\r\n// Log user out\r\nexport const logoutUser = () => dispatch => {\r\n  // Remove token from local storage\r\n  localStorage.removeItem(\"jwtToken\");\r\n  // Remove auth header for future requests\r\n  setAuthToken(false);\r\n  // Set current user to empty object {} which will set isAuthenticated to false\r\n  dispatch(setCurrentUser({}));\r\n};","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const USER_LOADING = \"USER_LOADING\";\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";","import {\r\n    SET_CURRENT_USER,\r\n    USER_LOADING\r\n  } from \"../actions/types\";\r\n  const isEmpty = require(\"is-empty\");\r\n  const initialState = {\r\n    isAuthenticated: false,\r\n    user: {},\r\n    loading: false\r\n  };\r\n  export default function(state = initialState, action) {\r\n    switch (action.type) {\r\n      case SET_CURRENT_USER:\r\n        return {\r\n          ...state,\r\n          isAuthenticated: !isEmpty(action.payload),\r\n          user: action.payload\r\n        };\r\n      case USER_LOADING:\r\n        return {\r\n          ...state,\r\n          loading: true\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }","import { GET_ERRORS } from \"../actions/types\";\r\nconst initialState = {};\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport errorReducer from \"./errorReducer\";\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  errors: errorReducer\r\n});","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\nexport default store;","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//Navbar added for basic usage\r\nclass Navbar extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"navbar-fixed\">\r\n        <nav className=\"z-depth-0\">\r\n          <div className=\"nav-wrapper white\">\r\n            <Link\r\n              to=\"/\"\r\n              style={{\r\n                fontFamily: \"monospace\"\r\n              }}\r\n              className=\"col s5 brand-logo center black-text\"\r\n            >\r\n              <i className=\"material-icons\">code</i>\r\n              MERN\r\n            </Link>\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Landing extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 center-align\">\r\n                        <h4>\r\n                            <b>Build</b> a login/auth app with the{\" \"}\r\n                            <span style={{ fontFamily: \"monospace\" }}>MERN</span>\r\n                            stack from scratch\r\n                         </h4>\r\n                         <p className=\"flow-text grey-text text-darken-1\">\r\n                             create an authentication app\r\n                         </p>\r\n                         <br />\r\n                         <div className=\"col s6\">\r\n                             <Link to=\"/register\" style={{ width: \"140px\", borderRadius: \"3px\", letterSpacing: \"1.5px\" }} className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\">\r\n                                 Log In\r\n                             </Link>\r\n                         </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Landing;","import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { registerUser } from \"../../actions/authActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      password2: \"\",\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // If logged in and user navigates to Register page, should redirect them to dashboard\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    }\r\n  }\r\n\r\nonChange = e => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\nonSubmit = e => {\r\n    e.preventDefault();\r\nconst newUser = {\r\n      name: this.state.name,\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      password2: this.state.password2\r\n    };\r\nconsole.log(newUser);\r\n\r\nthis.props.registerUser(newUser, this.props.history); \r\n  };\r\n\r\nrender() {\r\n    const { errors } = this.state;\r\nreturn (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col s8 offset-s2\">\r\n            <Link to=\"/\" className=\"btn-flat waves-effect\">\r\n              <i className=\"material-icons left\">keyboard_backspace</i> Back to\r\n              home\r\n            </Link>\r\n            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n              <h4>\r\n                <b>Register</b> below\r\n              </h4>\r\n              <p className=\"grey-text text-darken-1\">\r\n                Already have an account? <Link to=\"/login\">Log in</Link>\r\n              </p>\r\n            </div>\r\n            <form noValidate onSubmit={this.onSubmit}>\r\n              <div className=\"input-field col s12\">\r\n                <input\r\n                  onChange={this.onChange}\r\n                  value={this.state.name}\r\n                  error={errors.name}\r\n                  id=\"name\"\r\n                  type=\"text\"\r\n                  className={classnames(\"\", {\r\n                    invalid: errors.name\r\n                  })}\r\n                />\r\n                <label htmlFor=\"name\">Name</label>\r\n                <span className=\"red-text\">{errors.name}</span>\r\n              </div>\r\n              <div className=\"input-field col s12\">\r\n                <input\r\n                  onChange={this.onChange}\r\n                  value={this.state.email}\r\n                  error={errors.email}\r\n                  id=\"email\"\r\n                  type=\"email\"\r\n                  className={classnames(\"\", {\r\n                    invalid: errors.email\r\n                  })}\r\n                />\r\n                <label htmlFor=\"email\">Email</label>\r\n                <span className=\"red-text\">{errors.email}</span>\r\n              </div>\r\n              <div className=\"input-field col s12\">\r\n                <input\r\n                  onChange={this.onChange}\r\n                  value={this.state.password}\r\n                  error={errors.password}\r\n                  id=\"password\"\r\n                  type=\"password\"\r\n                  className={classnames(\"\", {\r\n                    invalid: errors.password\r\n                  })}\r\n                />\r\n                <label htmlFor=\"password\">Password</label>\r\n                <span className=\"red-text\">{errors.password}</span>\r\n              </div>\r\n              <div className=\"input-field col s12\">\r\n                <input\r\n                  onChange={this.onChange}\r\n                  value={this.state.password2}\r\n                  error={errors.password2}\r\n                  id=\"password2\"\r\n                  type=\"password\"\r\n                  className={classnames(\"\", {\r\n                    invalid: errors.password2\r\n                  })}\r\n                />\r\n                <label htmlFor=\"password2\">Confirm Password</label>\r\n                <span className=\"red-text\">{errors.password2}</span>\r\n              </div>\r\n              <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n                <button\r\n                  style={{\r\n                    width: \"150px\",\r\n                    borderRadius: \"3px\",\r\n                    letterSpacing: \"1.5px\",\r\n                    marginTop: \"1rem\"\r\n                  }}\r\n                  type=\"submit\"\r\n                  className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\r\n                >\r\n                  Sign up\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRegister.propTypes = {\r\n  registerUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  errors: state.errors\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { registerUser }\r\n)(withRouter(Register));","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"../../actions/authActions\";\r\nimport classnames from \"classnames\";\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // If logged in and user navigates to Login page, should redirect them to dashboard\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\ncomponentWillReceiveProps(nextProps) {\r\n    if (nextProps.auth.isAuthenticated) {\r\n      this.props.history.push(\"/dashboard\"); // push user to dashboard when they login\r\n    }\r\nif (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    }\r\n  }\r\nonChange = e => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\nonSubmit = e => {\r\n    e.preventDefault();\r\nconst userData = {\r\n      email: this.state.email,\r\n      password: this.state.password\r\n    };\r\nthis.props.loginUser(userData); // since we handle the redirect within our component, we don't need to pass in this.props.history as a parameter\r\n  };\r\nrender() {\r\n    const { errors } = this.state;\r\nreturn (\r\n      <div className=\"container\">\r\n        <div style={{ marginTop: \"4rem\" }} className=\"row\">\r\n          <div className=\"col s8 offset-s2\">\r\n            <Link to=\"/\" className=\"btn-flat waves-effect\">\r\n              <i className=\"material-icons left\">keyboard_backspace</i> Back to\r\n              home\r\n            </Link>\r\n            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n              <h4>\r\n                <b>Login</b> below\r\n              </h4>\r\n              <p className=\"grey-text text-darken-1\">\r\n                Don't have an account? <Link to=\"/register\">Register</Link>\r\n              </p>\r\n            </div>\r\n            <form noValidate onSubmit={this.onSubmit}>\r\n              <div className=\"input-field col s12\">\r\n                <input\r\n                  onChange={this.onChange}\r\n                  value={this.state.email}\r\n                  error={errors.email}\r\n                  id=\"email\"\r\n                  type=\"email\"\r\n                  className={classnames(\"\", {\r\n                    invalid: errors.email || errors.emailnotfound\r\n                  })}\r\n                />\r\n                <label htmlFor=\"email\">Email</label>\r\n                <span className=\"red-text\">\r\n                  {errors.email}\r\n                  {errors.emailnotfound}\r\n                </span>\r\n              </div>\r\n              <div className=\"input-field col s12\">\r\n                <input\r\n                  onChange={this.onChange}\r\n                  value={this.state.password}\r\n                  error={errors.password}\r\n                  id=\"password\"\r\n                  type=\"password\"\r\n                  className={classnames(\"\", {\r\n                    invalid: errors.password || errors.passwordincorrect\r\n                  })}\r\n                />\r\n                <label htmlFor=\"password\">Password</label>\r\n                <span className=\"red-text\">\r\n                  {errors.password}\r\n                  {errors.passwordincorrect}\r\n                </span>\r\n              </div>\r\n              <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n                <button\r\n                  style={{\r\n                    width: \"150px\",\r\n                    borderRadius: \"3px\",\r\n                    letterSpacing: \"1.5px\",\r\n                    marginTop: \"1rem\"\r\n                  }}\r\n                  type=\"submit\"\r\n                  className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\r\n                >\r\n                  Login\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  loginUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { loginUser }\r\n)(Login);","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      auth.isAuthenticated === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\nPrivateRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\nexport default connect(mapStateToProps)(PrivateRoute);","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logoutUser } from \"../../actions/authActions\";\r\nclass Dashboard extends Component {\r\n  onLogoutClick = e => {\r\n    e.preventDefault();\r\n    this.props.logoutUser();\r\n  };\r\nrender() {\r\n    const { user } = this.props.auth;\r\nreturn (\r\n      <div style={{ height: \"75vh\" }} className=\"container valign-wrapper\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 center-align\">\r\n            <h4>\r\n              <b>Hey there,</b> {user.name.split(\" \")[0]}\r\n              <p className=\"flow-text grey-text text-darken-1\">\r\n                You are logged into a full-stack{\" \"}\r\n                <span style={{ fontFamily: \"monospace\" }}>MERN</span> app 👏\r\n              </p>\r\n            </h4>\r\n            <button\r\n              style={{\r\n                width: \"150px\",\r\n                borderRadius: \"3px\",\r\n                letterSpacing: \"1.5px\",\r\n                marginTop: \"1rem\"\r\n              }}\r\n              onClick={this.onLogoutClick}\r\n              className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\r\n            >\r\n              Logout\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nDashboard.propTypes = {\r\n  logoutUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logoutUser }\r\n)(Dashboard);","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport Navbar from \"./components/Navbar\";\nimport Landing from \"./components/Landing\";\nimport Register from \"./components/auth/Register\";\nimport Login from \"./components/auth/Login\";\nimport PrivateRoute from \"./components/private-route/PrivateRoute\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\n\n// Check for token to keep user logged in\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  const token = localStorage.jwtToken;\n  setAuthToken(token);\n  // Decode token and get user info and exp\n  const decoded = jwt_decode(token);\n  // Set user and isAuthenticated\n  store.dispatch(setCurrentUser(decoded));\n  // Check for expired token\n  const currentTime = Date.now() / 1000; // to get in milliseconds\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser());\n    // Redirect to login\n    window.location.href = \"./login\";\n  }\n}\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Navbar />\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n            <Switch>\n              <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}